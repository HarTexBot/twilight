searchState.loadedDescShard("twilight_mention", 0, "twilight-mention\nFormatters for creating mentions.\nParse mentions out of strings.\nTimestamps with the ability to be formatted in clients …\nComponents to construct a slash command mention.\nMention a resource, such as an emoji or user.\nFormatter to mention a resource that implements …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMention a command.\nMention a resource by using its ID.\nChannel mention.\nEmoji mention.\nAn extra part was found that shouldn’t be present.\nID portion of the mention isn’t a u64.\nLeading arrow (<code>&lt;</code>) is not present.\nIterator of mentions within a buffer.\nAny type of mention.\nParse mentions out of buffers.\nParsing a mention failed due to invalid syntax.\nType of <code>ParseMentionError</code> that occurred.\nOne or more parts of the mention are missing.\nRole mention.\nLeading sigil(s) of the mention after the leading arrow (<code>&lt;</code>…\nMention’s sigil is not present.\nTimestamp mention.\nTimestamp style value is invalid.\nTrailing arrow (<code>&gt;</code>) is not present.\nUser mention.\nReturn an immutable reference to the underlying buffer of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nSearch a buffer for mentions and parse out any that are …\nSearch a buffer for mentions and parse out any that are …\nImmutable reference to the type of error that occurred.\nParse a mention out of a buffer.\nParse a mention from a string slice.\nNumber of parts that are expected.\nPossible sigils that were expected for the mention type.\nString that could not be parsed into a u64.\nThe extra part that was found.\nCharacter that was instead found where the leading arrow …\nNumber of parts that have been found.\nCharacter that was instead found where the sigil should be.\nValue of the style.\nCharacter that was instead found where the trailing arrow …\nStyle modifier to display a timestamp as a long date.\nStyle modifier to display a timestamp as a long date/time.\nStyle modifier to display a timestamp as a long date/time.\nStyle modifier to display a timestamp as a relative …\nStyle modifier to display a timestamp as a short date/time.\nStyle modifier to display a timestamp as a short date/time.\nStyle modifier to display a timestamp as a short date/time.\nGiven value is not a valid style.\nTimestamp representing a time to be formatted based on a …\nStyle modifier denoting how to display a timestamp.\nConverting a <code>TimestampStyle</code> from a string slice failed.\nType of <code>TimestampStyleConversionError</code> that occurred.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nImmutable reference to the type of error that occurred.\nCreate a new timestamp with a Unix timestamp and …\nParse a timestamp from a string slice.\nStyle representing the display modifier.\nRetrieve the display character of a style.\nUnix timestamp.")